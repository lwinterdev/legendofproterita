[gd_scene load_steps=13 format=2]

[ext_resource path="res://teal_turret_head.png" type="Texture" id=1]
[ext_resource path="res://teal_turret_stand.png" type="Texture" id=2]
[ext_resource path="res://TealTurret.gd" type="Script" id=3]
[ext_resource path="res://item1.png" type="Texture" id=4]
[ext_resource path="res://FlashShader.shader" type="Shader" id=5]

[sub_resource type="Shader" id=1]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/pixelate

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;

uniform int amount = 40;

void fragment()
{
	vec2 grid_uv = round(UV * float(amount)) / float(amount);
	
	vec4 text = texture(TEXTURE, grid_uv);
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/amount = 40

[sub_resource type="ShaderMaterial" id=3]
shader = ExtResource( 5 )
shader_param/flash_color = Color( 1, 0, 0, 1 )
shader_param/flash_modifier = 0.0

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 4.93877, 4.99275 )

[sub_resource type="CircleShape2D" id=5]
radius = 46.8918

[sub_resource type="Animation" id=6]
resource_name = "attack_flash"
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/flash_modifier")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/flash_color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=7]
resource_name = "recovery_flash"
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/flash_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/flash_modifier")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[node name="TealTurret" type="KinematicBody2D"]
script = ExtResource( 3 )

[node name="Stand" type="Sprite" parent="."]
texture = ExtResource( 2 )

[node name="Head" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( -0.0196857, 0 )
rotation = -1.5708
texture = ExtResource( 1 )
offset = Vector2( 2, 0 )

[node name="RayCast2D" type="RayCast2D" parent="Head"]
scale = Vector2( 0.7, 1 )
enabled = true
cast_to = Vector2( 50, 0 )
collision_mask = 6

[node name="Blink" type="Sprite" parent="Head"]
material = SubResource( 3 )
position = Vector2( 8.00965, 0.000745706 )
scale = Vector2( 0.0616254, 0.0613803 )
texture = ExtResource( 4 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 4 )

[node name="AggroArea" type="Area2D" parent="."]
visible = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="AggroArea"]
position = Vector2( -0.0417137, 0.583994 )
shape = SubResource( 5 )

[node name="Sprite" type="Sprite" parent="."]

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Head/Blink")
anims/attack_flash = SubResource( 6 )
anims/recovery_flash = SubResource( 7 )
[connection signal="body_entered" from="AggroArea" to="." method="_on_AggroArea_body_entered"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
